name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: fintech
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Test Ledger Service
      run: |
        cd ledger-service
        ./mvnw clean test
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/fintech
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: postgres
        SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
    
    - name: Test Transfer Service
      run: |
        cd transfer-service
        ./mvnw clean test
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/fintech
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: postgres
        SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
        LEDGER_SERVICE_URL: http://localhost:8081
    
    - name: Build Ledger Service
      run: |
        cd ledger-service
        ./mvnw clean package -DskipTests
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/fintech
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: postgres
        SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
    
    - name: Build Transfer Service
      run: |
        cd transfer-service
        ./mvnw clean package -DskipTests
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/fintech
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: postgres
        SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
        LEDGER_SERVICE_URL: http://localhost:8081
    
    - name: Upload JAR artifacts
      uses: actions/upload-artifact@v4
      with:
        name: jar-files
        path: |
          ledger-service/target/*.jar
          transfer-service/target/*.jar

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: fintech
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Wait for PostgreSQL
      run: |
        for i in {1..30}; do
          if pg_isready -h localhost -p 5432 -U postgres; then
            break
          else
            sleep 2
          fi
        done
    
    - name: Run Integration Tests
      run: |
        cd ledger-service && ./mvnw test -Dspring.profiles.active=ci
        cd ../transfer-service && ./mvnw test -Dspring.profiles.active=ci
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/fintech
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: postgres
        SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
        LEDGER_SERVICE_URL: http://localhost:8081
name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: fintech
          POSTGRES_PASSWORD: fintech123
          POSTGRES_DB: fintech
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Run tests for ledger-service
      run: |
        cd ledger-service
        ./mvnw clean test -Dspring.profiles.active=test
        -Dspring.datasource.url=jdbc:postgresql://localhost:5432/fintech
        -Dspring.datasource.username=fintech
        -Dspring.datasource.password=fintech123
    
    - name: Run tests for transfer-service
      run: |
        cd transfer-service
        ./mvnw clean test -Dspring.profiles.active=test
        -Dspring.datasource.url=jdbc:postgresql://localhost:5432/fintech
        -Dspring.datasource.username=fintech
        -Dspring.datasource.password=fintech123
        -Dledger.service.url=http://localhost:8081

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Build ledger-service
      run: |
        cd ledger-service
        ./mvnw clean package -DskipTests
    
    - name: Build transfer-service
      run: |
        cd transfer-service
        ./mvnw clean package -DskipTests
    
    - name: Build Docker images
      run: |
        docker build -t ledger-service:latest ./ledger-service
        docker build -t transfer-service:latest ./transfer-service
    
    - name: Test Docker Compose
      run: |
        docker-compose up -d
        sleep 30
        docker-compose ps
        docker-compose logs
        docker-compose down